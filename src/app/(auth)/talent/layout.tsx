import type { Metadata } from 'next'
import { cookies, headers } from 'next/headers'
import Link from 'next/link'
import { redirect } from 'next/navigation'

import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu'
import { env } from '@/config/env'
import { ApiResponse } from '@/types/api/api-response'

import { CompanyLogo } from './_components/company-logo'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

interface AuthUserData {
  id: number
  email: string
  firstName: string
  lastName: string
  role: {
    id: number
    name: string
  }
  createdAt: string
  updatedAt: string
}

export default async function TalentLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const headersList = headers()
  const pathname = headersList.get('x-pathname')
  const query = pathname ? `?redirect=${encodeURIComponent(pathname)}` : ''
  const redirectUrl = '/auth/login' + query

  const token = cookies().get(env.AUTH_COOKIE_NAME)?.value

  if (!token) {
    return redirect(redirectUrl)
  }

  async function getAuthenticatedUser(
    token: string,
  ): Promise<ApiResponse<AuthUserData>> {
    const res = await fetch(`${env.SERVER_URL}/api/v1/users/me/`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    })

    if (res.status === 401) {
      return redirect(redirectUrl)
    }

    return res.json()
  }

  const authData = await getAuthenticatedUser(token)

  const user = authData.data
  const userInitials =
    user.firstName[0].toUpperCase() + user.lastName[0].toUpperCase()

  if (!user) {
    throw new Error('Missing user data')
  }

  return (
    <div>
      <div className='fixed right-8 top-6 z-50'>
        <DropdownMenu>
          <DropdownMenuTrigger>
            <Avatar>
              <AvatarImage src='' />
              <AvatarFallback className='font-semibold text-primary'>
                {userInitials}
              </AvatarFallback>
            </Avatar>
          </DropdownMenuTrigger>
          <DropdownMenuContent>
            <DropdownMenuLabel>My Account</DropdownMenuLabel>
            <DropdownMenuSeparator />
            <DropdownMenuItem>Profile</DropdownMenuItem>
            <DropdownMenuItem>Billing</DropdownMenuItem>
            <DropdownMenuItem>Team</DropdownMenuItem>
            <DropdownMenuItem>Subscription</DropdownMenuItem>
          </DropdownMenuContent>
        </DropdownMenu>
      </div>
      <div className='flex w-full'>
        <div className='min-h-screen flex-none basis-96 bg-foreground px-2 py-12'>
          <div className='flex flex-col items-center text-primary-foreground'>
            <CompanyLogo className='mb-6' />
            <Link href='/talent/profile' className='text-muted-foreground'>
              Profile
            </Link>
          </div>
        </div>
        <div className='grow px-8 py-6'>{children}</div>
      </div>
    </div>
  )
}
