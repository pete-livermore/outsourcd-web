import '@/styles/globals.css'

import type { Metadata } from 'next'
import { Inter as FontSans } from 'next/font/google'
import { cookies } from 'next/headers'
import Link from 'next/link'
import { redirect } from 'next/navigation'

import { Icons } from '@/components/icons'
import { Sidebar } from '@/components/layout/sidebar'
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
import { env } from '@/config/env'
import { User } from '@/types/entities/user'
import { cn } from '@/utils/styles'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

interface AuthData {
  user: User
  token: string
}

export const fontSans = FontSans({
  subsets: ['latin'],
  variable: '--font-sans',
})

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  // const token = cookies().get(env.AUTH_COOKIE_NAME)?.value

  // if (!token) {
  //   redirect('/auth/login')
  // }

  // async function getAuthenticatedUser(token: string) {
  //   try {
  //     const res = await fetch(`${env.USER_ADMIN_URL}/api/v1/auth/me`, {
  //       headers: {
  //         Authorization: `Bearer ${token}`,
  //       },
  //     })
  //     return res.json()
  //   } catch (err) {
  //     // TODO logout user if 401 response
  //     redirect('/error/500')
  //   }
  // }

  // const authData: AuthData = await getAuthenticatedUser(token)
  // const user = authData.user

  // if (!user) {
  //   redirect('/error/500')
  // }

  const navItems = [
    { text: 'Jobs', icon: <Icons.Jobs />, href: '/talent/jobs' },
    { text: 'Profile', icon: <Icons.Profile />, href: '/talent/profile' },
  ]

  return (
    <div className='flex min-h-screen'>
      <Sidebar className='hidden basis-72 lg:block'>
        <nav>
          <ul className='space-y-6 px-6'>
            {navItems.map((item, i) => (
              <li key={i}>
                <Link href={item.href} className='flex space-x-4 px-2 py-1.5'>
                  {item.icon}
                  <p>{item.text}</p>
                </Link>
              </li>
            ))}
          </ul>
        </nav>
      </Sidebar>
      <main className='grow px-6 py-8'>{children}</main>
      {/* <Avatar className='fixed right-4 top-4 z-40 cursor-pointer'>
            <AvatarImage src='https://github.com/shadc' alt='@shadcn' />
            <AvatarFallback>{user.first_name[0]}</AvatarFallback>
          </Avatar> */}
    </div>
  )
}
