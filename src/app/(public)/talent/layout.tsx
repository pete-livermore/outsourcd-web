import '@/styles/globals.css'

import type { Metadata } from 'next'
import { Inter as FontSans } from 'next/font/google'
import { cookies } from 'next/headers'
import Link from 'next/link'
import { redirect } from 'next/navigation'

import { Icons } from '@/components/icons'
import { Sidebar } from '@/components/layout/sidebar'
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'
import { env } from '@/config/env'
import { User } from '@/types/entities/user'
import { cn } from '@/utils/styles'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

interface AuthData {
  user: User
  token: string
}

export const fontSans = FontSans({
  subsets: ['latin'],
  variable: '--font-sans',
})

export default async function TalentLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const token = cookies().get(env.AUTH_COOKIE_NAME)?.value

  if (!token) {
    redirect('/auth/login')
  }

  async function getAuthenticatedUser(token: string) {
    try {
      const res = await fetch(`${env.BACKEND_URL}/auth/me/`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      return res.json()
    } catch (err) {
      console.log('err =>', err)
      // TODO logout user if 401 response
      redirect('/error/500')
    }
  }

  const authData: AuthData = await getAuthenticatedUser(token)
  const user = authData.user

  if (!user) {
    redirect('/error/500')
  }

  return <div className='px-16 py-8'>{children}</div>
}
